[font=Overpass 100px]
[text-color=white]
[shading-opacity=0]
[black]

---- [logo-dbus-systemd.png]
# Cockpit title

# First we'll give you a quick refresher of what Cockpit does
# And then we'll look at how it uses systemd (among other things) to do it

---- [text-align=center] [text-color=gray]
 #hellomynameis
<span weight="bold" foreground="white">Stef Walter</span>
# I've worked on tons of open source projects, but the most recent is Cockpit.
# I work at Red Hat

----- [text-align=center] [text-color=gray]
Cockpit is the
<span weight="bold" foreground="white">Linux admin interface</span>

-- [text-align=left] [left] [text-color=gray]
<span size="large">Goals:</span>

<span foreground="white"><b>1.</b> Linux servers
         <b>usable</b> by non-expert admins

<b>2.</b> Complex Linux features
         <b>discoverable</b></span>

# We have two goals

# ---- [cockpit-login-rhel.png] [duration=0.1]
# Cockpit runs in a browser. But it's not a "website". A very untraditional
# web application

---- [cockpit-login-fedora.png] [duration=0.1]

# ---- [cockpit-login-generic.png] [duration=0.1]

---- [text-align=center]
Zero footprint

---- [cockpit-system.png]
# Cockpit looks like this
# I'm going to take you on a bit of a tour of Cockpit, so that the stuff
# we're talking about later makes sense

---- [cockpit-hostname.png]
# You can do things like change the host name via hostnamed

---- [cockpit-timers.png]
# You look at all the systemd units, in this case timers

---- [cockpit-service.png]
# You look at all the systemd units, in this case timers

---- [cockpit-timedate.png]
# You can change time zones, date, NTP servers

---- [cockpit-shutdown.png]
# You can schedule reboots

---- [cockpit-journal.png]
# You can browse through the journal

---- [cockpit-network-manager.png]
# You can configure the network

---- [cockpit-terminal.png]
# You can even pull up a terminal

---- [cockpit-run-container.png]
# You can run and interact with containers

---- [cockpit-kubernetes-topology.png]
# And watch them be scheduled across machines

---- [shutterdog@flickr-359841474_9b0c7bdbc9_o.jpg] [bottom]
Look ma, no backend

# When I say Cockpit runs in the browser ... I really mean that.
# Most people who would implement Cockpit would build some sorta
# management agent and a REST API and so on. Cockpit is not like
# that.

---- [text-color=gray]
<span weight="bold" foreground="white">Remotable</span> System APIs

# Cockpit interacts with system APIs directly.
# Remotable

----
<span weight="bold" size="large" foreground="gray">Remotable API examples</span>

• DBus
• HTTP (aka REST)
• Spawning processes
• Sockets
• Files
• /proc


----
cockpit-bridge

# But wait, the browser can't talk to the system APIs

---- [cockpit-transport.png]

---- [postmemes-flicker-21236613584_0f3d664bbb_o.jpg] [bottom] [shading-opacity=0.6]
Get on the DBus

---- [cockpit-dbus-proxy.ogv]

--- [text-color=black] [white]
<span weight="bold" size="large">Protocol Example</span>
<span font="Monospace">
&lt; {
&lt;   "command": "open",
&lt;   "channel": "mydbus",
&lt;   "payload": "dbus-json3",
&lt;   "name": "org.freedesktop.hostname1"
&lt; }

&lt; mydbus
&lt; {
&lt;   "call": [
&lt;     "/org/freedesktop/hostname1",
&lt;     "org.freedesktop.hostname1",
&lt;     "SetStaticHostname", [ "mypinkpony.local", true ] ],
&lt;   "id": "cookie"
&lt; }

&gt; mydbus
&gt; {
&gt;   "reply": [ null ],
&gt;   "id": "cookie"
&gt; }
</span>

---- [text-color=black] [white]
<span weight="bold" size="large">Introspecting Interfaces</span>

1. Method call from Cockpit

   <span font="Monospace">org.interface.Method(1, 2.3, "/test")</span>

2. cockpit-bridge calls Introspect

   <span font="Monospace">Introspect()</span>

3. Cast types and make call

   <span font="Monospace">Method(INT16:1, DOUBLE:2.3, OBJECT_PATH:"/test")</span>

---- [text-color=black] [white]
<span weight="bold" size="large">org.freedesktop.DBus.Properties     </span>
<span font="Monospace">
  GetAll()
  PropertiesChanged

</span>
• Minimizes round trips
• No races

---- [text-color=black] [white]
<span weight="bold" size="large">org.freedesktop.DBus.ObjectManager</span>
<span font="Monospace">
  GetManagedObjects()
  InterfacesAdded
  InterfacesRemoved
</span>
• Minimizes round trips
• No races

----
No ObjectManager? What then?

# systemd needs to use ObjectManager in its DBus APIs
# But it doesn't today, how do we deal with it

---- [text-color=black] [white]
<span weight="bold" size="large">Introspect() party!</span>

<span font="Monospace">
&lt;node name="/com/example/object"&gt;
  &lt;interface name="com.example.Interface"&gt;
    ...
  &lt;/interface&gt;
  &lt;node name="child"/&gt;
  &lt;node name="another"/&gt;
&lt;/node&gt;

&lt;node name="/com/example/object/child"&gt;
  ...
&lt;/node&gt;
</span>

----
TODO

----
Keep (most of) DBus remotable

# As we start using kdbus more broadnly it's important to keep the core
# APIs remotable, configuration and otherwise

----
Want Mooaaar APIs

# Keep building more DBus system APIs
# Not just talking about systemd here
# networkd needs a configuration API

----
Build <span foreground="white">networkd API with rollback</span>

# systemd is often/usually used remotely, as is networkd
# When configuring network remotely, a core concept needs to be rollback

---- [text-color=gray]
Heresy: <span foreground="white">Split out sdbus</span>

# All the other C DBus libraries are nasty
# They all have a mastive asterisk next to them
# libdbus: Actually says "Don't use this"
# GDBus: If GObject is a prerequisite to using DBus ... not gonna happen
# python-dbus: double deprecated
# ... and the list goes on ...

---- [font=Monospace 60px]
 diff <span foreground="white">TODO</span>
 @@ -19,0 +20,6 @@<span foreground="#4e9a06">

 +* <span weight="bold">Use ObjectManager</span> (it's already implemented)
 +
 +* Implement a <span weight="bold">networkd API with rollback</span>
 +
 +* <span weight="bold">Split out sdbus</span> at some point in the future</span>

---- [text-color=gray]
Q: Can Cockpit run without systemd?
<span foreground="white">A: If you reimplement systemd</span>

# It could ... if someone replicates systemd
# Cockpit owes a lot to systemd clear APIs and clear definition of the system

---- [redhat-only.png] [text-color=gray]

 Questions?

 <span foreground="white">cockpit-project.org</span>

 #cockpit on Freenode

 stef.thewalter.net

 <span size="x-small">Credits: Pinpoint, shutterdog on Flickr, postmemes on Flickr</span>
